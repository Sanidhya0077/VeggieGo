plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'dev.flutter.flutter-gradle-plugin'
}

def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterRoot = localProperties.getProperty('flutter.sdk')
if (flutterRoot == null) {
    throw new Exception("Flutter SDK not found. Define location with flutter.sdk in the local.properties file.")
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}

def kotlin_version = '1.9.0'

android {
    namespace "com.example.veggiego"
    compileSdkVersion 35
    ndkVersion "27.0.12077973"

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

    defaultConfig {
        // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/configure-app-id.html).
        applicationId "com.example.veggiego"
        // You can update the following values to match your application needs.
        minSdkVersion flutter.minSdkVersion
        targetSdkVersion flutter.targetSdkVersion
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    signingConfigs {
        release {
            storeFile file('keystore.jks') // Replace with your keystore file
            storePassword 'veggiego'
            keyAlias 'veggiego'
            keyPassword 'veggiego'
        }
    }

    buildTypes {
        release {
            // TODO: Add your own signing config for the release build.
            // Signing with the debug keys for now, so `flutter run --release` works.
            signingConfig signingConfigs.release
            minifyEnabled true
            shrinkResources true
        }
    }
}

dependencies {
    // implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    // implementation platform('com.google.firebase:firebase-bom:32.7.2')
    // implementation 'com.google.firebase:firebase-analytics'
    // implementation 'com.google.firebase:firebase-auth'
    // implementation 'com.google.firebase:firebase-firestore'
    // implementation 'com.google.firebase:firebase-storage'
    // implementation 'com.google.firebase:firebase-messaging'
    // implementation 'com.google.firebase:firebase-database'
    // implementation 'com.google.firebase:firebase-crashlytics'
    // implementation 'com.google.gms:google-services:4.3.10'
    // implementation 'com.google.firebase:firebase-appcheck-safetynet'
    // implementation 'com.google.firebase:firebase-appcheck-debug'
    // implementation 'com.google.firebase:firebase-appcheck-playintegrity'
    // implementation 'com.google.firebase:firebase-appcheck-ktx'
    // implementation 'com.google.firebase:firebase-appcheck-common-ktx'
    // implementation 'com.google.firebase:firebase-appcheck-safetynet-ktx'
    // implementation 'com.google.firebase:firebase-appcheck-debug-ktx'
    // implementation 'com.google.firebase:firebase-appcheck-playintegrity-ktx'
    // implementation 'com.google.firebase:firebase-appcheck-common-ktx'
    // implementation 'com.google.firebase:firebase-appcheck-safetynet-ktx'
}

// apply plugin: 'com.google.gms.google-services'
